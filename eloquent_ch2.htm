<!DOCTYPE html>
<html>

<head>
    <!-- 
     
    December 2019
Drills for essential practice to keep my mind in the
code and to prevent me from
blanking in technical interviews. 

Exercises from Eloquent Javascript: A Modern Introduction to Programming
Third Edition by Marijin Haverbeke 

Chapter 2. 

-->

</head>

<body>


    <script>
        // Exercises

        // Write a loop that makes seven calls to console.log 
        // to output the following triangle:

        // # 
        // ##
        // ###
        // ####
        // #####
        // ######
        // #######

        // It may be useful to know that you can find the length of a sring
        // by writing .length after it. 

        // let abc = "abc";
        // console.log(abc.length);
        // -> 3
        // a for loop also has a counter to track progress. 
        // for (let number = 0; number < 12; number = number + 2) {
        // all of the statements that are related to the "state" of 
        // the loop are grouped together after for. 
        //     console.log(number);
        // }

        // Start with a program that prints out the numbers 1 to 7 
        // like when we introduced the for loop. 


        tree = "#########";
        for (i = "#"; i < "#########"; i += "#")
            console.log(i);

        //FizzBuzz
        // Write a program that uses console.log to print all the numbers from 
        // 1 o 100, with two exceptions. 
        // For numbers divisible by 3, print "Fizz" instead of the number, and
        // for numbers divisible by 5 (and not 3), print "Buzz" instead. 

        // When you have that working, modify your program to print "FizzBuzz" 
        // for numbers that are divisible by both 3 and 5 ( and still print 
        // "Fizz" or "Buzz" for numbers that are visible by only one of those).


        for (let i = 1; i <= 100; i += 1) {
            if (i % 5 == 0 && i % 3 == 0) {
                console.log("FizzBuzz");
            } else if (i % 5 == 0 && i % 3 != 0) {
                console.log("Buzz");
            } else if (i % 3 == 0 && i % 5 != 0) {
                console.log("Fizz");
            } else {
                console.log(i);
            }
        }


        // CHESSBOARD
        //  Write a program that creates a string that represents an 8 x 8 grid, 
        // using newline characters to separate lines. At each position of the 
        // grid there is either a space or a "#" character. The characters should 
        // form a chessboard. 

        // Passing this string to console.log should show something like this:

        //  # # # # 
        // # # # #
        //  # # # # 
        // # # # #
        //  # # # # 
        // # # # #
        //  # # # # 
        // # # # #

        // When you have a program that generates this pattern, define a binding size = 8 
        // and change the program so that it works for any size, outputting a grid of the
        // given width and height.


        let a = " # # # # \n# # # # ";
        for (let i = 1; i <= 4; i += 1) {
            if (i % 2 == 0) {
                a.length == 4;
                console.log(a);
            } else {
                a.length == 8;
                console.log(a);
            }
        }
    </script>


</body>

</html>